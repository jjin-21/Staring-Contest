user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;

        # HTTP 서버 설정 - HTTP 요청을 HTTPS로 리디렉션
        server {
                listen          80;
                server_name     i10e206.p.ssafy.io;
                return          301 https://$server_name$request_uri;
        }

        # HTTPS 서버 설정
        server {
                listen          443 ssl;
                server_name     i10e206.p.ssafy.io;

                ssl_certificate         /etc/nginx/ssl/certificate.crt;
                ssl_certificate_key     /etc/nginx/ssl/private.key;


                # Java Application 트래픽 리디렉션
                location /api {
                        proxy_pass      http://localhost:8787;
                        proxy_set_header Upgrade $http_upgrade;
                        proxy_set_header Connection "upgrade";
                }

                # FastAPI Application 트래픽 리디렉션
                location /fastapi {
                        proxy_pass      http://localhost:8000;
                        proxy_set_header Upgrade $http_upgrade;
                        proxy_set_header Connection "upgrade";
                }

                # Node.js Application 트래픽 리디렉션
                location / {
                #       proxy_pass      http://localhost:3000;
                        root    /var/www/html/;
                        index   index.html index.htm;
                        try_files $uri $uri/    /index.html;
                }

                error_page      500 502 503 504         /50x.html;
                location =      /50x.html {
                        root    /usr/share/nginx/html;
                }
        }
}